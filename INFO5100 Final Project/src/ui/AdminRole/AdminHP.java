/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.AdminOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.border.LineBorder;
import javax.swing.table.JTableHeader;
import java.awt.Component;
import java.awt.Font;

/**
 *
 * @author yushe
 */
public class AdminHP extends javax.swing.JPanel {

    private JPanel workArea;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private AdminOrganization adminOrg;
    private EcoSystem business;
    
    
  
    public AdminHP() {

//        System.out.println("‚ö†Ô∏è Warning: Default constructor used ‚Äî make sure this is intentional!");
//        initComponents();
//        this.setPreferredSize(new java.awt.Dimension(1450, 800));
//        populateTable();
        
//         throw new RuntimeException("üö® Default constructor of AdminHP used! Stack trace below:");
    }
    
    public AdminHP(JPanel jp, UserAccount ua, Enterprise e, AdminOrganization o, EcoSystem b) {
        this.setPreferredSize(new java.awt.Dimension(1450, 800));
        this.workArea = jp;
        this.userAccount = ua;
        this.enterprise = e;
        adminOrg = o;
        business = b;
        
//         Transfer user accounts from system to AdminOrganization
        if (adminOrg != null && business != null) {
            System.out.println("Transferring user accounts from system to AdminOrganization...");
            for (UserAccount systemUA : business.getUserAccountDirectory().getUserAccountList()) {
                adminOrg.getUserAccountDirectory().getUserAccountList().add(systemUA);
            }
            System.out.println("Transferred " + adminOrg.getUserAccountDirectory().getUserAccountList().size() + " user accounts");
        }
        
        System.out.println("Received JPanel: " + (jp != null ? "Not null ‚úÖ" : "NULL ‚ùå"));
        System.out.println("JPanel class: " + (jp != null ? jp.getClass().getName() : "null"));
        System.out.println("AdminOrg: " + (adminOrg != null ? "Not null ‚úÖ" : "NULL ‚ùå"));
        System.out.println("UserAccountDirectory: " + (adminOrg != null && adminOrg.getUserAccountDirectory() != null ? "Not null ‚úÖ" : "NULL ‚ùå"));
        System.out.println("Number of user accounts: " + (adminOrg != null && adminOrg.getUserAccountDirectory() != null ? adminOrg.getUserAccountDirectory().getUserAccountList().size() : "N/A"));
        
        initComponents();
        populateTable();
        
        // Apply unified UI theme
        setupTheme();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WelcomeMsg = new javax.swing.JLabel();
        btnMngOwnProfile = new javax.swing.JButton();
        viewUsersScrollPane = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        btnAddUser = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        maintenanceCorner = new javax.swing.JPanel();
        lblMaintenance = new javax.swing.JLabel();
        actionCorner = new javax.swing.JPanel();
        lblAction = new javax.swing.JLabel();
        viewSusScrollPane = new javax.swing.JScrollPane();
        tblSus = new javax.swing.JTable();
        btnAcc = new javax.swing.JButton();
        btnDeny = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        WelcomeMsg.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        WelcomeMsg.setText("Welcome Admin!");

        btnMngOwnProfile.setText("Manage My Own Profile");
        btnMngOwnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMngOwnProfileActionPerformed(evt);
            }
        });

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "ID", "Employee Name", "Role", "Password"
            }
        ));
        viewUsersScrollPane.setViewportView(tblUsers);

        btnAddUser.setText("Add User");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnModify.setText("Modify User");

        btnDelete.setText("Delete User");

        btnSearch.setText("Search User");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("User List");

        maintenanceCorner.setBackground(new java.awt.Color(255, 255, 255));

        lblMaintenance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblMaintenance.setText("Maintenance");

        javax.swing.GroupLayout maintenanceCornerLayout = new javax.swing.GroupLayout(maintenanceCorner);
        maintenanceCorner.setLayout(maintenanceCornerLayout);
        maintenanceCornerLayout.setHorizontalGroup(
            maintenanceCornerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(maintenanceCornerLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(lblMaintenance)
                .addContainerGap(174, Short.MAX_VALUE))
        );
        maintenanceCornerLayout.setVerticalGroup(
            maintenanceCornerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(maintenanceCornerLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblMaintenance)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        actionCorner.setBackground(new java.awt.Color(255, 255, 255));

        lblAction.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAction.setText("Suspend Suspicious Activities");

        tblSus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Payment ID", "Shipment Info", "Amount"
            }
        ));
        viewSusScrollPane.setViewportView(tblSus);

        btnAcc.setText("Accept");

        btnDeny.setText("Deny");

        javax.swing.GroupLayout actionCornerLayout = new javax.swing.GroupLayout(actionCorner);
        actionCorner.setLayout(actionCornerLayout);
        actionCornerLayout.setHorizontalGroup(
            actionCornerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actionCornerLayout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addComponent(lblAction)
                .addGap(126, 126, 126))
            .addGroup(actionCornerLayout.createSequentialGroup()
                .addGroup(actionCornerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(actionCornerLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(viewSusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(actionCornerLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(btnAcc)
                        .addGap(60, 60, 60)
                        .addComponent(btnDeny)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        actionCornerLayout.setVerticalGroup(
            actionCornerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(actionCornerLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblAction)
                .addGap(39, 39, 39)
                .addComponent(viewSusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(actionCornerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAcc)
                    .addComponent(btnDeny))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        btnRefresh.setText("Refresh List");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddUser)
                .addGap(79, 79, 79)
                .addComponent(btnModify)
                .addGap(66, 66, 66)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actionCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(maintenanceCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viewUsersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(47, 47, 47)
                                .addComponent(btnRefresh))
                            .addComponent(WelcomeMsg))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(btnMngOwnProfile))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSearch)))))
                .addContainerGap(411, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maintenanceCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMngOwnProfile)
                            .addComponent(WelcomeMsg))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSearch)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(btnRefresh))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewUsersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddUser)
                            .addComponent(btnModify)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(actionCorner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnMngOwnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMngOwnProfileActionPerformed
        // TODO add your handling code here:
        AdminManageOwnProfile amop = new AdminManageOwnProfile(workArea, userAccount);
        workArea.add("AdminManageOwn", amop);
        CardLayout l = (CardLayout) workArea.getLayout();
        l.show(workArea, "AdminManageOwn");
        
    }//GEN-LAST:event_btnMngOwnProfileActionPerformed

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // TODO add your handling code here:
        AddNewUser anu = new AddNewUser(workArea, userAccount, enterprise, adminOrg, business);
        workArea.add("AddNewUser", anu);
        CardLayout l = (CardLayout) workArea.getLayout();
        l.show(workArea, "AddNewUser");
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel WelcomeMsg;
    private javax.swing.JPanel actionCorner;
    private javax.swing.JButton btnAcc;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeny;
    private javax.swing.JButton btnMngOwnProfile;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblAction;
    private javax.swing.JLabel lblMaintenance;
    private javax.swing.JPanel maintenanceCorner;
    private javax.swing.JTable tblSus;
    private javax.swing.JTable tblUsers;
    private javax.swing.JScrollPane viewSusScrollPane;
    private javax.swing.JScrollPane viewUsersScrollPane;
    // End of variables declaration//GEN-END:variables
    
    
    // operations
    private void populateTable() {
        DefaultTableModel m = (DefaultTableModel) tblUsers.getModel();
        m.setRowCount(0);
        
        // Debug logging
        System.out.println("Accessing UserAccountDirectory from AdminOrganization...");
        System.out.println("AdminOrg: " + (adminOrg != null ? "Not null ‚úÖ" : "NULL ‚ùå"));
        System.out.println("UserAccountDirectory: " + (adminOrg != null && adminOrg.getUserAccountDirectory() != null ? "Not null ‚úÖ" : "NULL ‚ùå"));
        
        if (adminOrg != null && adminOrg.getUserAccountDirectory() != null) {
            System.out.println("Number of user accounts: " + adminOrg.getUserAccountDirectory().getUserAccountList().size());
            System.out.println("User accounts: " + adminOrg.getUserAccountDirectory().getUserAccountList());
        }
        
        for (UserAccount ua : adminOrg.getUserAccountDirectory().getUserAccountList()) {
            System.out.println("Processing user account: " + ua.toString());
            Object[] row = new Object[5];
            row[0] = ua;
            row[1] = ua.getEmployee().getId();
            row[2] = ua.getEmployee().toString();
            row[3] = ua.getRole();
            row[4] = ua.getPassword();
            m.addRow(row);
        }
    }
    
    /**
     * Apply consistent UI theme to all components
     */
    private void setupTheme() {
        // Set panel background color
        this.setBackground(new Color(240, 245, 255));
        
        // Style all buttons
        styleAllButtons();
        
        // Style all labels
        styleAllLabels();
    }
    
    /**
     * Apply consistent styling to all buttons
     */
    private void styleAllButtons() {
        Component[] components = this.getComponents();
        for (Component component : components) {
            if (component instanceof JButton) {
                styleButton((JButton) component);
            }
            if (component instanceof JPanel) {
                Component[] panelComponents = ((JPanel) component).getComponents();
                for (Component panelComponent : panelComponents) {
                    if (panelComponent instanceof JButton) {
                        styleButton((JButton) panelComponent);
                    }
                }
            }
        }
    }
    
    /**
     * Apply consistent styling to a button
     * @param button Button to style
     */
    private void styleButton(JButton button) {
        button.setBackground(new Color(26, 79, 156)); // Medium blue
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        // Add a subtle border with rounded corners
        button.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(13, 60, 130), 1),
            BorderFactory.createEmptyBorder(5, 10, 5, 10)
        ));
        button.setFont(new Font("Helvetica Neue", Font.BOLD, 14));
    }
    
    /**
     * Apply consistent styling to all labels
     */
    private void styleAllLabels() {
        Component[] components = this.getComponents();
        for (Component component : components) {
            if (component instanceof JLabel) {
                if (((JLabel) component).getFont().getSize() > 15) {
                    styleTitleLabel((JLabel) component);
                } else {
                    styleLabel((JLabel) component);
                }
            }
            if (component instanceof JPanel) {
                Component[] panelComponents = ((JPanel) component).getComponents();
                for (Component panelComponent : panelComponents) {
                    if (panelComponent instanceof JLabel) {
                        if (((JLabel) panelComponent).getFont().getSize() > 15) {
                            styleTitleLabel((JLabel) panelComponent);
                        } else {
                            styleLabel((JLabel) panelComponent);
                        }
                    }
                }
            }
        }
    }
    
    /**
     * Apply title label styling
     * @param label Label to style
     */
    private void styleTitleLabel(JLabel label) {
        label.setForeground(new Color(26, 79, 156));
        label.setFont(new Font("Helvetica Neue", Font.BOLD, 20));
    }
    
    /**
     * Apply regular label styling
     * @param label Label to style
     */
    private void styleLabel(JLabel label) {
        label.setForeground(new Color(26, 79, 156));
        label.setFont(new Font("Helvetica Neue", Font.PLAIN, 14));
    }
    
    /**
     * Apply consistent styling to a text field
     * @param textField TextField to style
     */
    private void styleTextField(JTextField textField) {
        textField.setBackground(new Color(245, 245, 250)); // Light gray-white background
        textField.setForeground(new Color(13, 25, 51)); // Dark blue text
        textField.setCaretColor(new Color(26, 79, 156)); // Medium blue cursor
        textField.setBorder(BorderFactory.createLineBorder(new Color(90, 141, 224), 1));
        textField.setFont(new Font("Helvetica Neue", Font.PLAIN, 14));
    }
    
    /**
     * Style a combo box to match the theme
     * @param comboBox ComboBox to style
     */
    private void styleComboBox(JComboBox comboBox) {
        comboBox.setBackground(new Color(245, 245, 250)); // Light gray-white background
        comboBox.setForeground(new Color(13, 25, 51)); // Dark blue text
        comboBox.setBorder(BorderFactory.createLineBorder(new Color(90, 141, 224), 1));
        comboBox.setFont(new Font("Helvetica Neue", Font.PLAIN, 14));
        
        // Style the UI if possible
        try {
            comboBox.setUI(new javax.swing.plaf.basic.BasicComboBoxUI() {
                @Override
                protected JButton createArrowButton() {
                    JButton button = super.createArrowButton();
                    button.setBackground(new Color(26, 79, 156));
                    button.setBorder(BorderFactory.createLineBorder(new Color(90, 141, 224)));
                    return button;
                }
            });
        } catch (Exception e) {
            System.out.println("Could not fully style combo box: " + e.getMessage());
        }
    }
    
    /**
     * Style table with consistent theme
     * @param table Table to style
     * @param scrollPaneName Name of the scrollpane containing the table
     */
    private void styleTable(JTable table, String scrollPaneName) {
        // Style table header
        JTableHeader header = table.getTableHeader();
        header.setBackground(new Color(26, 79, 156));
        header.setForeground(Color.WHITE);
        header.setFont(new Font("Helvetica Neue", Font.BOLD, 14));
        header.setBorder(new LineBorder(new Color(13, 60, 130)));
        
        // Style table - using darker colors for better visibility
        table.setBackground(new Color(240, 240, 250)); // Slightly darker background
        table.setForeground(new Color(0, 0, 0)); // Black text for maximum contrast
        table.setGridColor(new Color(180, 195, 235)); // Darker grid lines
        table.setSelectionBackground(new Color(90, 141, 224));
        table.setSelectionForeground(Color.WHITE);
        table.setFont(new Font("Helvetica Neue", Font.BOLD, 14)); // Bold font for better visibility
        table.setRowHeight(30); // Slightly increase row height for better readability
        
        // Set alternating row colors with more contrast
        table.setDefaultRenderer(Object.class, new javax.swing.table.DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                if (!isSelected) {
                    c.setBackground(row % 2 == 0 ? new Color(240, 240, 250) : new Color(220, 220, 235));
                    c.setForeground(new Color(0, 0, 0)); // Ensure text is always black for maximum contrast
                }
                return c;
            }
        });
        
        // Find and style the scroll pane if it exists
        try {
            Component[] components = this.getComponents();
            for (Component component : components) {
                if (component instanceof JScrollPane && component.getName() != null && 
                    component.getName().equals(scrollPaneName)) {
                    ((JScrollPane) component).setBorder(new LineBorder(new Color(26, 79, 156)));
                    break;
                }
            }
        } catch (Exception e) {
            System.out.println("Could not find scroll pane for table: " + e.getMessage());
        }
    }
}
